{"version":3,"sources":["components/Home.js","components/Header.js","components/Option.js","components/Question.js","containers/Quiz.js","actions/QuizActions.js","components/QuestionAnswer.js","containers/Result.js","components/App.js","reducers/QuizReducer.js","Store.js","index.js"],"names":["withRouter","withStyles","theme","createStyles","root","Object","defineProperty","padding","spacing","unit","height","window","innerHeight","display","alignItems","breakpoints","down","heading","fontFamily","textAlign","color","palette","primary","main","fontSize","question","button","borderRadius","concat","buttonContainer","devInfo","textDecoration","devName","justifyContent","devDiv","link","props","classes","react_default","a","createElement","Grid_default","container","className","Hidden_default","mdDown","item","lg","xs","Typography_default","variant","Button_default","onClick","history","push","href","target","Icon_default","AppBar_default","position","elevation","Toolbar_default","keys","option","margin","boxShadow","width","activeOption","background","light","key","border","activeKey","backgroundColor","value","paddingLeft","ButtonBase_default","active","onResponse","qn","index","Zoom_default","in","timeout","style","transitionDelay","unmountOnExit","transitionDuration","text","fontWeight","transform","cqn","que","options","map","components_Option","response","Quiz","_this","this","components_Header","Card_default","card","header","questions","Avatar_default","avatar","currentQuestion","activeAvatar","CardContent_default","cardContent","components_Question","respond","CardActions_default","actions","IconButton_default","btn","disabled","changeQuestion","ChevronLeft_default","length","ChevronRight_default","React","Component","&:hover","&:disabled","connect","state","quiz","dispatch","type","payload","correctIcon","wrongIcon","withPadding","react","ans","Divider_default","Result","i","checkIfAnswered","replace","circleContainer","CircularProgress_default","progressBackground","size","innerWidth","progress","totalCorrect","circleContent","toFixed","questionsContainer","components_QuestionAnswer","btnContainer","md","reset","fullWidth","paddingTop","& > div","createMuiTheme","secondary","MuiThemeProvider_default","react_router_dom","basename","react_router","path","exact","component","Home","defaultState","QuizReducer","arguments","undefined","action","toConsumableArray","objectSpread","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","es","store","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.c0a053d9.chunk.js","sourcesContent":["import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Link from \"@material-ui/core/Link\";\nimport {withRouter} from \"react-router-dom\";\n\n\n//classes for styling\nconst styles = theme => createStyles({\n    root: {\n        padding: theme.spacing.unit*5,\n        height: 0.8*window.innerHeight,\n        display: 'flex',\n        alignItems: 'center',\n        [theme.breakpoints.down('sm')]: {\n            padding: theme.spacing.unit*2,\n        }\n    },\n    heading: {\n        fontFamily: 'Baloo',\n        textAlign: 'center',\n        color: theme.palette.primary.main,\n\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 56,\n        }\n    },\n    question: {\n        fontFamily: 'Montserrat',\n        textAlign: 'center',\n        padding: theme.spacing.unit*4\n    },\n    button: {\n        borderRadius: \"50px\",\n        padding: `${theme.spacing.unit*2}px ${theme.spacing.unit*4}px`\n    },\n    buttonContainer: {\n        textAlign: 'center'\n    },\n    devInfo: {\n        textAlign: 'center',\n        padding: theme.spacing.unit*4,\n        textDecoration: 'none',\n        color: \"grey\",\n        fontFamily: 'Montserrat'\n    },\n    devName: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none',\n        fontFamily: 'Montserrat',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center'\n    },\n    devDiv: {\n        padding: theme.spacing.unit/2\n    },\n    link: {\n        color: theme.palette.primary.main,\n        textDecoration: 'none'\n    }\n});\n\nconst Home = props => {\n    const {classes} = props;\n    return (\n        <Grid container className={classes.root}>\n            {/*hide on medium & smaller screens*/}\n            <Hidden mdDown>\n                <Grid item lg={3}>\n                </Grid>\n            </Hidden>\n\n            {/*main content   */}\n            <Grid item xs={12} lg={6} className={classes.main}>\n                {/*title*/}\n                <Typography variant=\"h1\" className={classes.heading}>\n                    QuizW!z\n                </Typography>\n                <div className={classes.question}>\n\n                    {/*question*/}\n                    <Typography variant=\"h4\">\n                        Can you answer this simple quiz on ReactJS?\n                    </Typography>\n                </div>\n                <div className={classes.buttonContainer}>\n\n                    {/*start quiz button*/}\n                    <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.button}\n                        // when clicked view the quiz page\n                        onClick={() => props.history.push(\"/quiz\")}\n                    >\n                        get started\n                    </Button>\n                </div>\n\n                {/*Developer info*/}\n                <div className={classes.devInfo}>\n                    <div className={classes.devDiv}>\n                        Developed by\n                        <a className={classes.link} href=\"https://www.linkedin.com/in/dsanket/\" target=\"_blank\">\n                            <Typography variant=\"h6\" color=\"inherit\" className={classes.devName}>\n                                Sanket Dahegaonkar\n                            </Typography>\n                        </a>\n                    </div>\n                    <div className={classes.devDiv}>\n                        <div className={classes.devName}>\n                            <Icon>email</Icon> &nbsp; <a className={classes.link} href=\"mailto:dahegaonkarsanket@gmail.com\">dahegaonkarsanket@gmail.com</a>\n                        </div>\n                    </div>\n                    <div className={classes.devName}>\n                        <Icon>call</Icon><a href=\"tel:+918381027904\" className={classes.link}>+91 8381027904</a>\n                    </div>\n                    <div className={classes.devName}>\n                        <Icon>call</Icon><a href=\"tel:+917620971629\" className={classes.link}>+91 7620971629</a>\n                    </div>\n                </div>\n            </Grid>\n\n            {/*hide on medium & smaller screens*/}\n            <Hidden mdDown>\n                <Grid item lg={3}>\n                </Grid>\n            </Hidden>\n        </Grid>\n    );\n};\n\nexport default withRouter(withStyles(styles)(Home));\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\n//classes for styling\nconst styles = theme => createStyles({\n    heading: {\n        color: theme.palette.primary.main,\n        fontFamily: 'Baloo'\n    }\n});\n\nconst Header = props => {\n    const {classes} = props;\n    return (\n\n        <AppBar position=\"static\" color=\"default\" elevation={1}>\n            <Grid container>\n                {/*hide on medium & smaller screens*/}\n                <Hidden mdDown>\n                    <Grid item lg={3}>\n                    </Grid>\n                </Hidden>\n\n\n                <Grid item xs={12} lg={6}>\n                    <Toolbar>\n                        <Typography variant=\"h4\" color=\"inherit\" className={classes.heading}>\n                            {/*Title*/}\n                            QuizWiz\n                        </Typography>\n                    </Toolbar>\n                </Grid>\n            </Grid>\n        </AppBar>\n    );\n};\n\nexport default withStyles(styles)(Header);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport TouchRipple from '@material-ui/core/ButtonBase';\nimport Zoom from \"@material-ui/core/Zoom\";\n\n//classes for styling\nconst styles = theme => createStyles({\n    option: {\n        padding: theme.spacing.unit,\n        margin: theme.spacing.unit,\n        boxShadow: '0px 1px 2px lightgrey, 0px -1px 2px lightgrey',\n        textAlign: 'left',\n        borderRadius: '50px',\n        display: 'inline-block',\n        width: `calc(50% - ${theme.spacing.unit*4}px)`,\n        fontSize: 24,\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 14,\n            width: `calc(100% - ${theme.spacing.unit*2}px)`,\n        }\n    },\n    activeOption: {\n        background: theme.palette.primary.light\n    },\n    main: {\n        display: 'flex',\n        alignItems: 'center'\n    },\n    key: {\n        position: 'absolute',\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit*1.7}px`,\n        border: `2px solid ${theme.palette.primary.main}`,\n        borderRadius: '50%',\n        [theme.breakpoints.down('sm')]: {\n            padding: `${theme.spacing.unit}px ${theme.spacing.unit*1.3}px`,\n        }\n    },\n    activeKey: {\n        backgroundColor: theme.palette.primary.main,\n        color: \"white\"\n    },\n    value: {\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit*1.7}px`,\n        paddingLeft: theme.spacing.unit*7,\n        [theme.breakpoints.down('sm')]: {\n            padding: `${theme.spacing.unit}px ${theme.spacing.unit*1.3}px`,\n            paddingLeft: theme.spacing.unit*5,\n        }\n    }\n});\n\n//option key\nconst keys = [\"A\", \"B\", \"C\", \"D\"];\n\nconst Option = props => {\n    const {classes} = props;\n    return (\n\n        // Wrapper for waves effect\n        <TouchRipple className={classes.option+\" \"+(props.active ? classes.activeOption : \"\")} onClick={() => props.onResponse(props.qn, props.index)}>\n            <div className={classes.main}>\n\n                {/*Zoom in/out animation wrapper for selected option*/}\n                <Zoom\n                    in={props.active}\n                    timeout={300}\n                    style={{transitionDelay: !props.active ? 0 : 300}}\n                    unmountOnExit\n                >\n                    {/*Option*/}\n                    <div className={classes.key+\" \"+classes.activeKey}>\n                        { keys[props.index] }\n                    </div>\n                </Zoom>\n                {/*Zoom in/out animation wrapper for unselected option*/}\n                <Zoom\n                    in={!props.active}\n                    timeout={300}\n                    style={{transitionDelay: props.active ? 0 : 300}}\n                    unmountOnExit\n                >\n                    {/*Option*/}\n                    <div className={classes.key}>\n                        { keys[props.index] }\n                    </div>\n                </Zoom>\n                <div className={classes.value}>\n                    {/*Option value*/}\n                    { props.option }\n                </div>\n            </div>\n        </TouchRipple>\n    );\n};\n\nexport default withStyles(styles)(Option);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Option from \"./Option\";\n\n\n//classes for styling\nconst styles = theme => createStyles({\n    question: {\n        textAlign: 'center',\n        transitionDuration: 300,\n        height: window.innerHeight*0.5,\n        [theme.breakpoints.down('sm')]: {\n            height: window.innerHeight*0.7,\n        }\n    },\n    text: {\n        fontSize: 48,\n        fontWeight: '500',\n        fontFamily: 'Montserrat',\n        padding: theme.spacing.unit*4,\n        [theme.breakpoints.down('sm')]: {\n            fontSize: 20,\n        }\n    }\n});\n\n\n\n\n\nconst Question = props => {\n    const {classes} = props;\n\n\n    return (\n        <div className={classes.question} style={{transform: `translateY(${-props.qn*100}%) translateX(${(props.qn-props.cqn+((props.qn-props.cqn) > 0 ? 0.1 : (props.qn-props.cqn) < 0 ? -0.1 : 0))*100}%)`}}>\n            {/*Main question*/}\n            <Typography variant=\"h5\" className={classes.text}>\n                { props.question.que }\n            </Typography>\n\n            {/*Creating options*/}\n            {\n                props.question.options.map((option, index) => {\n                    return <Option\n                        index={index}\n                        qn={props.qn}\n                        key={\"option\"+index}\n                        option={option}\n                        active={props.question.response === index}\n                        onResponse={props.onResponse}/>\n                })\n            }\n        </div>\n    );\n};\n\nexport default withStyles(styles)(Question);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Header from \"../components/Header\";\nimport {connect} from \"react-redux\";\nimport Question from \"../components/Question\";\nimport Card from \"@material-ui/core/Card\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport {changeQuestion, respond} from \"../actions/QuizActions\";\nimport {withRouter} from \"react-router-dom\";\n\n\n//classes for styling\nconst styles = theme => createStyles({\n    main: {\n        padding: theme.spacing.unit*3,\n        [theme.breakpoints.down('sm')]: {\n            padding: `${theme.spacing.unit*2}px 0`,\n        }\n    },\n    header: {\n        backgroundColor: theme.palette.primary.main,\n        padding: theme.spacing.unit*2,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        [theme.breakpoints.down('sm')]: {\n            padding: `${theme.spacing.unit*2}px ${theme.spacing.unit}px`,\n        }\n    },\n    avatar: {\n        margin: `0 ${theme.spacing.unit}px`,\n        transitionDuration: 300,\n        transform: 'scale(0.8)',\n        [theme.breakpoints.down('sm')]: {\n            margin: `0 ${theme.spacing.unit/3}px`\n        }\n    },\n    activeAvatar: {\n        backgroundColor: \"white\",\n        transform: 'scale(1)',\n        color: theme.palette.primary.main\n    },\n    btn: {\n        backgroundColor: theme.palette.primary.main,\n        color: \"white\",\n        '&:hover': {\n            backgroundColor: theme.palette.primary.light,\n            color: \"white\"\n        },\n        '&:disabled': {\n            backgroundColor: \"lightgrey\",\n            color: \"grey\"\n        }\n    },\n    cardContent: {\n        height: window.innerHeight*0.7,\n        [theme.breakpoints.down('sm')]: {\n            height: window.innerHeight*0.7,\n        }\n    }\n});\n\nclass Quiz extends React.Component {\n\n    render() {\n        const {classes} = this.props;\n\n        return (\n            <Grid container>\n                <Grid item xs={12}>\n                    <Header/>\n                </Grid>\n                <Hidden mdDown>\n                    <Grid item lg={3}>\n                    </Grid>\n                </Hidden>\n                <Grid item xs={12} lg={6} className={classes.main}>\n                    {/*card*/}\n                    <Card className={classes.card}>\n                        <div className={classes.header}>\n\n                            {/*create question indicators*/}\n                            {\n                                this.props.questions.map((question, index) => {\n                                    return <Avatar key={index} className={classes.avatar+\" \"+(this.props.currentQuestion === index? classes.activeAvatar : \"\")}>\n                                        { index+1 }\n                                    </Avatar>\n                                })\n                            }\n                        </div>\n                        <CardContent className={classes.cardContent}>\n                            {/*create question component*/}\n                            {\n                                this.props.questions.map((question, index) => {\n                                    return (\n                                        <Question key={\"question\"+index} cqn={this.props.currentQuestion} qn={index} question={question} onResponse={this.props.respond}/>\n                                    )\n                                })\n                            }\n                        </CardContent>\n\n                        {/*action buttons (prev & next question trigger)*/}\n                        <CardActions className={classes.actions}>\n                            <IconButton\n                                className={classes.btn}\n                                // disable when 1st question is the current question\n                                disabled={this.props.currentQuestion === 0}\n                                //switch to prev question\n                                onClick={() => this.props.currentQuestion > 0 ? this.props.changeQuestion(this.props.currentQuestion-1) : null }\n                            >\n                                <ChevronLeftIcon />\n                            </IconButton>\n                            <IconButton\n                                className={classes.btn}\n                                // disable when no response is given\n                                disabled={this.props.questions[this.props.currentQuestion].response == null}\n                                onClick={() => {\n                                    if(this.props.currentQuestion < this.props.questions.length - 1){\n                                        //switch to next question\n                                        this.props.changeQuestion(this.props.currentQuestion+1);\n                                    }\n                                    else{\n                                        //display result if all questions are attempted\n                                        this.props.history.push(\"/result\")\n                                    }\n                                }}\n                            >\n                                <ChevronRightIcon />\n                            </IconButton>\n                        </CardActions>\n                    </Card>\n                </Grid>\n                <Hidden mdDown>\n                    <Grid item lg={3}>\n                    </Grid>\n                </Hidden>\n            </Grid>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.quiz.questions, // all questions\n        currentQuestion: state.quiz.currentQuestion // current question number\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        respond: (qn, response) => {\n            dispatch(respond({ qn, response })) //handle response\n        },\n        changeQuestion: qn => {\n            dispatch(changeQuestion(qn)); //navigate to next or previous question\n        }\n    };\n};\n\nexport default withRouter(withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Quiz)));\n","\n//Returns the action which is to be handled when the user clicks any option.\nexport function respond(payload) {\n    return {\n        type: \"RESPONSE_GIVEN\",\n        payload: payload // of the form  { qn, response }\n                        // qn: question number to which response is given [0-6]\n                        // response: user response [0-3] }\n    }\n}\n\n\n//Returns the action which is to be handled when the user wish to move to the next or previous question.\nexport function changeQuestion(payload) {\n    return {\n        type: \"QUESTION_CHANGED\",\n        payload: payload // Question number [0-6]\n    }\n}\n\n//Returns the action which is to be handled when the user wish to retry the quiz.\n\nexport function reset() {\n    return {\n        type: \"RESET\",\n        payload: null //no parameter needed\n    }\n}\n\n","import React, {Fragment} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst styles = theme => createStyles({\n    root: {\n        fontFamily: 'Montserrat',\n        padding: `${theme.spacing.unit*2}px 0`\n    },\n    correctIcon: {\n        color: \"green\"\n    },\n    wrongIcon: {\n        color: \"red\"\n    },\n    withPadding: {\n        padding: `${theme.spacing.unit}px 0`\n    }\n});\n\nconst QuestionAnswer = props => {\n    const {classes} = props;\n    return (\n        // empty container\n        <Fragment>\n            <Grid container className={classes.root}>\n                <Grid item xs={1}>\n                    {/*question number*/}\n                    { props.index+1 }.\n                </Grid>\n\n                <Grid item xs={11}>\n                    <Grid item xs={12}>\n                        {/*question*/}\n                        { props.question.que }\n                    </Grid>\n                    <Grid container className={classes.withPadding}>\n                        <Grid item xs={1}>\n                            {/*icon to indicate the correctness of response*/}\n                            <Icon fontSize=\"small\" className={props.question.ans === props.question.response ? classes.correctIcon : classes.wrongIcon }>\n                                {props.question.ans === props.question.response ? \"done\" : \"close\" }\n                            </Icon>\n                        </Grid>\n                        <Grid item xs={11}>\n                            {/*response*/}\n                            { props.question.options[props.question.response] }\n                        </Grid>\n                        {\n                            // hide if response is correct, to prevent redundancy\n                            props.question.ans !== props.question.response ?\n                                <div className={classes.withPadding}>\n                                    <Grid item xs={1}>\n                                        {/*icon to indicate correct answer*/}\n                                        <Icon fontSize=\"small\" className={classes.correctIcon}>\n                                            done\n                                        </Icon>\n                                    </Grid>\n                                    <Grid item xs={11}>\n                                        {/*correct answer*/}\n                                        { props.question.options[props.question.ans] }\n                                    </Grid>\n                                </div> : \"\"\n                        }\n                    </Grid>\n                </Grid>\n            </Grid>\n            <Divider/>\n        </Fragment>\n    );\n};\n\nexport default withStyles(styles)(QuestionAnswer);\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {createStyles, withStyles} from \"@material-ui/core\";\nimport Header from \"../components/Header\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport QuestionAnswer from \"../components/QuestionAnswer\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Button from \"@material-ui/core/Button\";\nimport {withRouter} from \"react-router-dom\";\nimport {reset} from \"../actions/QuizActions\";\n\n//classes for styling\nconst styles = theme => createStyles({\n    main: {\n        paddingTop: theme.spacing.unit*4\n    },\n    circleContainer: {\n        display: 'flex',\n        justifyContent: 'center',\n    },\n    progressBackground: {\n        position: 'absolute'\n    },\n    circleContent: {\n        position: 'absolute',\n        display: 'flex',\n        alignItems: 'center',\n        height: window.innerWidth*0.7 > 400 ? 400 : window.innerWidth*0.7,\n        '& > div': {\n            textAlign: 'center'\n        }\n    },\n    questionsContainer: {\n        padding: theme.spacing.unit*2,\n        paddingTop: theme.spacing.unit*4\n    },\n    btnContainer: {\n        padding: 5\n    }\n});\n\nclass Result extends React.Component {\n\n    //check if all questions are answered\n    checkIfAnswered(questions){\n        for(let i=0; i<questions.length; i++){\n            if(questions[i].response == null)\n                return false;\n        }\n        return true;\n    }\n\n    render() {\n\n        //if all questions are not answered redirect to 1st question\n        if(!this.checkIfAnswered(this.props.questions)){\n            this.props.history.replace(\"/quiz\")\n        }\n\n        const {classes} = this.props;\n        return (\n            <Grid container>\n                <Grid item xs={12}>\n                    <Header/>\n                </Grid>\n                <Hidden mdDown>\n                    <Grid item lg={3}>\n                    </Grid>\n                </Hidden>\n                <Grid item xs={12} lg={6} className={classes.main}>\n                    <div className={classes.circleContainer}>\n                        {/*//circular stats*/}\n                        <CircularProgress\n                            className={classes.progressBackground}\n                            variant=\"static\"\n                            value={100}\n                            //calculate size of circle\n                            size={window.innerWidth*0.7 > 400 ? 400 : window.innerWidth*0.7}\n                            color={\"secondary\"}\n                        />\n                        <CircularProgress\n                            className={classes.progress}\n                            variant=\"static\"\n                            //calculate percentage of correct responses\n                            value={(this.props.totalCorrect/this.props.questions.length)*100}\n                            //calculate size of circle\n                            size={window.innerWidth*0.7 > 400 ? 400 : window.innerWidth*0.7}\n                        />\n                        <div className={classes.circleContent}>\n                            <div>\n                                <Typography variant=\"h2\" color=\"primary\">\n                                    {/*percentage*/}\n                                    { ((this.props.totalCorrect/this.props.questions.length)*100).toFixed(1) }%\n                                </Typography>\n                                <Typography variant=\"h4\" color=\"secondary\">\n                                    {/*no. of correct response out of total*/}\n                                    { this.props.totalCorrect } / { this.props.questions.length }\n                                </Typography>\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classes.questionsContainer}>\n                        <Divider/>\n                        {/*create questions with answer*/}\n                        {\n                            this.props.questions.map((question, index) => {\n                                return <QuestionAnswer index={index} key={\"questionAnswer\"+index} question={question}/>\n                            })\n                        }\n                    </div>\n                    <div>\n                        <div>\n                            <Grid container>\n                                <Grid className={classes.btnContainer} item xs={6} md={2} lg={1}>\n                                    {/*button to navigate to the home page*/}\n                                    <Button onClick={() => { this.props.reset(); this.props.history.push(\"\"); } } fullWidth variant=\"contained\" color=\"primary\" className={classes.button}>\n                                        Home\n                                    </Button>\n                                </Grid>\n                                <Grid className={classes.btnContainer} item xs={6} md={2} lg={1}>\n                                    {/*button to restart the quiz*/}\n                                    <Button onClick={() => { this.props.reset(); this.props.history.push(\"quiz\"); } } fullWidth variant=\"contained\" color=\"primary\" className={classes.button}>\n                                        Retry\n                                    </Button>\n                                </Grid>\n                            </Grid>\n                        </div>\n                        <br/>\n                        <br/>\n                        <br/>\n                    </div>\n                </Grid>\n                <Hidden mdDown>\n                    <Grid item lg={3}>\n                    </Grid>\n                </Hidden>\n            </Grid>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        questions: state.quiz.questions, //all questions\n        totalCorrect: state.quiz.totalCorrect //total number of correct questions\n    };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        reset: () => {\n            dispatch(reset()) //reset all the attempts and start from beginning\n        }\n    };\n};\n\nexport default withRouter(withStyles(styles)(connect(mapStateToProps, mapDispatchToProps)(Result)));\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport createStyles from \"@material-ui/core/styles/createStyles\";\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Quiz from \"../containers/Quiz\";\nimport Result from \"../containers/Result\";\nimport MuiThemeProvider from \"@material-ui/core/styles/MuiThemeProvider\";\nimport createMuiTheme from \"@material-ui/core/styles/createMuiTheme\";\n\n//create classes if required\nconst styles = theme => createStyles({\n\n});\n\n//create a custom theme, make changes to default theme here\nconst theme = createMuiTheme({\n    palette: {\n        secondary: {\n            main: \"#c5cae9\"\n        }\n    }\n});\n\nconst App = (props) => {\n    const { classes } = props;\n    return (\n        // Wrapper for theme\n        <MuiThemeProvider theme={theme}>\n            <div>\n                {/*Wrapper for router*/}\n                <BrowserRouter basename='react-quiz'>\n                    {/*Display Home component when / is matched*/}\n                    <Route path=\"/\" exact component={Home}/>\n\n\n                    {/*Display Quiz component when /quiz is matched*/}\n                    <Route path=\"/quiz\" component={Quiz}/>\n\n                    {/*Display Result component when /result is matched*/}\n                    <Route path=\"/result\" component={Result}/>\n\n                </BrowserRouter>\n            </div>\n        </MuiThemeProvider>\n    );\n};\n\nexport default withStyles(styles)(App);\n","const questions = [{\n    que: \"We can go for ______ when there is a possibility that our user could change the data.\",\n    options: [\"Keys\", \"Refs\", \"Both\", \"None\"],\n    ans: 0,\n    response: null\n}, {\n    que: \"State whether true of false. \\'JSX is typesafe\\'\",\n    options: [\"True\", \"False\"],\n    ans: 0,\n    response: null\n}, {\n    que: \"React merges the object you provide into the current state using ________\",\n    options: [\"setState()\", \"state()\"],\n    ans: 0,\n    response: null\n}, {\n    que: \"Arbitrary inputs of components are called __________\",\n    options: [\"Keys\", \"Props\", \"Elements\", \"Refs\"],\n    ans: 1,\n    response: null\n}, {\n    que: \"_________ can be done while more than one element needs to be returned from a component\",\n    options: [\"Abstraction\", \"Packing\", \"Insulation\", \"Wrapping\"],\n    ans: 3,\n    response: null\n}, {\n    que: \"Which of the following needs to be updated to achieve dynamic UI updates?\",\n    options: [\"State\", \"Props\"],\n    ans: 0,\n    response: null\n}, {\n    que: \"Lifecycle methods are mainly used to _______\",\n    options: [\"keep track of event history\", \"enhance components\", \"free up resources\", \"none of the options\"],\n    ans: 2,\n    response: null\n}];\n\nconst defaultState = {\n    questions: questions,\n    currentQuestion: 0,\n    totalCorrect: 0\n};\n\n\nconst QuizReducer = (state = defaultState, action) => {\n    switch (action.type) {\n        //handles response\n        case \"RESPONSE_GIVEN\":\n            let questions = [...state.questions];\n            questions[action.payload.qn] = {\n                ...state.questions[action.payload.qn],\n                response: action.payload.response\n            };\n\n            state = {\n                ...state,\n                questions: questions,\n                totalCorrect: state.totalCorrect + (questions[action.payload.qn].ans === action.payload.response ? 1 : 0)\n            };\n\n            break;\n\n            //handles question switches\n        case \"QUESTION_CHANGED\":\n            state = {\n                ...state,\n                currentQuestion: action.payload\n            };\n            break;\n\n            //handles reset task\n        case \"RESET\":\n            state = {\n                ...defaultState\n            };\n            break;\n        default:\n    }\n    return state;\n};\n\nexport default QuizReducer;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport QuizReducer from \"./reducers/QuizReducer\";\n\n\nexport default createStore(\n    combineReducers({\n        //app: AppReducer,\n        quiz: QuizReducer\n    }),\n\n    //thunk middleware for async actions, not used in this web app currently, reserved for future.\n    applyMiddleware(thunk)\n)\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App.js\";\nimport {Provider} from \"react-redux\";\nimport store from \"./Store\";\n\nReactDOM.render(\n    // redux provider\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    //bootstrap via the element with id \"root\n    document.getElementById(\"root\"));\n"],"sourceRoot":""}